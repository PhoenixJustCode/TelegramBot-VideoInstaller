package bot

import (
	"strings"
	"telegramBotInstaller/internal/utils"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
	log "github.com/sirupsen/logrus"
)

func StartBot(cfg utils.TokenCFG) {
	if cfg.Token == "" {
		log.Fatal("–¢–æ–∫–µ–Ω Telegram API –Ω–µ –∑–∞–¥–∞–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è.")
	}

	bot, err := tgbotapi.NewBotAPI(cfg.Token)
	if err != nil {
		log.Panic(err)
	}

	bot.Debug = true
	log.Printf("Authorized on account %s", bot.Self.UserName)

	u := tgbotapi.NewUpdate(0)
	u.Timeout = 60

	updates := bot.GetUpdatesChan(u)

	for update := range updates {	// 1. –û–±—Ä–∞–±–æ—Ç–∫–∞ CallbackQuery (–∫–Ω–æ–ø–∫–∏)
		if update.CallbackQuery != nil {
			if update.CallbackQuery.Data == "/help" {
				msg := tgbotapi.NewMessage(update.CallbackQuery.Message.Chat.ID, getHelpMessage())
				bot.Send(msg)

				callback := tgbotapi.NewCallback(update.CallbackQuery.ID, "") // –û—Ç–≤–µ—Ç –Ω–∞ callback, —á—Ç–æ–±—ã —É–±—Ä–∞—Ç—å ¬´—á–∞—Å–∏–∫–∏¬ª
				bot.Request(callback)
			}
			continue
		}

		if update.Message == nil { //2. –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±—ã—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
			continue
		}

		username := update.Message.From.FirstName + " " + update.Message.From.LastName
		userText := strings.ToLower(update.Message.Text)

		log.Infof("[%s] %s", username, update.Message.Text)

		switch userText {
		case "/start":
			reply := "–ü—Ä–∏–≤–µ—Ç, " + username + "! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å üëã\n\n–ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å, —á—Ç–æ —è —É–º–µ—é ‚Äî –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –∏–ª–∏ –Ω–∞–ø–∏—à–∏ /help"
			helpButton := tgbotapi.NewInlineKeyboardButtonData("üÜò –ü–æ–º–æ—â—å", "/help")
			sendMessageWithKeyboard(update, reply, bot, helpButton)

		case "/help":
			sendMessage(update, getHelpMessage(), bot)

		default:
			reply := "–í—ã –Ω–∞–ø–∏—Å–∞–ª–∏: " + update.Message.Text
			sendMessage(update, reply, bot)
		}
	}
}

func sendMessage(update tgbotapi.Update, reply string, bot *tgbotapi.BotAPI) {
	msg := tgbotapi.NewMessage(update.Message.Chat.ID, reply)
	msg.ReplyToMessageID = update.Message.MessageID
	bot.Send(msg)
}

func sendMessageWithKeyboard(update tgbotapi.Update, reply string, bot *tgbotapi.BotAPI, helpButton tgbotapi.InlineKeyboardButton) {
	keyboard := tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(helpButton),
	)
	msg := tgbotapi.NewMessage(update.Message.Chat.ID, reply)
	msg.ReplyToMessageID = update.Message.MessageID
	msg.ReplyMarkup = keyboard
	bot.Send(msg)
}

func getHelpMessage() string {
	return `üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –≤–∏–¥–µ–æ –∏ –∞—É–¥–∏–æ üéß

–ß—Ç–æ —è —É–º–µ—é:
‚úÖ –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –≤–∏–¥–µ–æ –≤ —Ñ–æ—Ä–º–∞—Ç–µ MP4 ‚Äî —è –ø—Ä–µ–æ–±—Ä–∞–∑—É—é –µ–≥–æ –≤ –∞—É–¥–∏–æ—Ñ–∞–π–ª MP3 –∏ –ø—Ä–∏—à–ª—é —Ç–µ–±–µ –æ–±—Ä–∞—Ç–Ω–æ.
‚úÖ –°–∫–∏–Ω—å —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ —Å YouTube ‚Äî —è –∑–∞–≥—Ä—É–∂—É –µ–≥–æ –∏ —Ç–æ–∂–µ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É—é –≤ MP3.

–ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É /start —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –ø—Ä–∏—à–ª–∏ –≤–∏–¥–µ–æ/—Å—Å—ã–ª–∫—É.

‚ùì –ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã ‚Äî –ø–∏—à–∏ /help –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è.

–ü—Ä–∏—è—Ç–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è! üöÄ`
}
