package bot

import (
	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
	log "github.com/sirupsen/logrus"
	"path/filepath"
	"telegramBotInstaller/internal/services"
	"telegramBotInstaller/internal/utils"
	"time"
)

func SendMessageWithKeyboard(update tgbotapi.Update, reply string, bot *tgbotapi.BotAPI, helpButton tgbotapi.InlineKeyboardButton) {
	keyboard := tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(helpButton),
	)
	msg := tgbotapi.NewMessage(update.Message.Chat.ID, reply)
	msg.ReplyToMessageID = update.Message.MessageID
	msg.ReplyMarkup = keyboard
	if _, err := bot.Send(msg); err != nil {
		log.Printf("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: %v", err)
	}
}

func SendMessage(update tgbotapi.Update, reply string, bot *tgbotapi.BotAPI) {
	msg := tgbotapi.NewMessage(update.Message.Chat.ID, reply)
	msg.ReplyToMessageID = update.Message.MessageID
	if _, err := bot.Send(msg); err != nil {
		log.Printf("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: %v", err)
	}
}

func GetHelpMessage() string {
	return `üëã Hello! I am a bot for video and audio conversion üéß

What I can do:
‚úÖ Send me a video in MP4 format ‚Äî I will convert it to MP3 and send it back to you.
‚úÖ Send a YouTube link ‚Äî I will download it and convert to MP3 too.

Use the /start command to begin or just send a video/link.

‚ùì If you have any questions ‚Äî type /help anytime.

Enjoy! üöÄ`
}

func ProcessAndSendAudio(bot *tgbotapi.BotAPI, update tgbotapi.Update, videoPath, audioID, outputDir string) {
	_, err := services.ConvertMp4ToMp3WithID(videoPath, outputDir, audioID)
	if err != nil {
		SendMessage(update, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏", bot)
		log.Fatal(err)
		return
	}

	audioPath := filepath.Join(outputDir, audioID+".mp3")
	audioFile := tgbotapi.NewAudio(update.Message.Chat.ID, tgbotapi.FilePath(audioPath))
	if _, err := bot.Send(audioFile); err != nil {
		log.Printf("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ MP3: %v", err)
	}

	time.Sleep(time.Second * 10)

	if err := utils.DeleteFile(videoPath); err != nil {
		log.Errorf("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –≤–∏–¥–µ–æ: %v", err)
	} else {
		log.Infof("‚úÖ –í–∏–¥–µ–æ —É–¥–∞–ª–µ–Ω–æ: %s", videoPath)
	}

	if err := utils.DeleteFile(audioPath); err != nil {
		log.Errorf("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å MP3: %v", err)
	} else {
		log.Infof("‚úÖ MP3 —É–¥–∞–ª–µ–Ω–æ: %s", audioPath)
	}
}
